{"version":2,"name":"Grounded-Image-Captioning","disableSend":false,"placeBeforeInput":false,"injectInput":false,"color":"rgba(0, 0, 0, 0)","onlyBorderColor":false,"qrList":[{"id":4,"icon":"fa-images","showLabel":true,"label":"GroundedCaption","title":"","message":"/*\nWhat we need to do:\n\n- Build up a caption prompt based on character and persona info, message history, and a custom system prompt\n- Generate a caption based on this prompt\n- Inject that caption above the message.\n*|\n\n/# we only want to bother with all this if there's been any input. i can think of edge cases that'd break this check though but it's.... fine |\n/if left={{lastMessageId}} right=1 rule=gte else=\"/setvar key=history\" {:\n\t/let history {:\n\t\t/setvar key=history index=0 | /setvar key=i 0 |\n\t\t/while guard=off left=i right={{lastMessageId}} rule=lt {:\n\t\t\t/messages hidden=off names=off {{getvar::i}} | /setvar key=readMessage |\n\t\t\t/#echo {{getvar::i}}: {{getvar::readMessage}} |\n\t\t\t/setvar key=history index={{getvar::i}} {{getvar::readMessage}} |\n\t\t\t/incvar i |\n\t\t\t/flushvar readMessage\n\t\t:} |\n\t:}() |\n:} |\n\n/# if a swipeID exists, we know that the bot sent the last message. because if it's not, currentSwipeId is empty. |\n/if left={{currentSwipeId}} rule=not else={: /setvar key=recipient {{char}} :} {: /setvar key=recipient{{user}} :} |\n/setvar key=instruction The task is to caption an image as part of an ongoing roleplay. The context of the roleplay will be provided, and then the image itself. |\n/setvar key=reminder As a reminder: your only task is to caption the image. Reply with only a short description, in one paragraph no more than 5 sentences long, of what {{getvar::recipient}} is seeing in the provided image.|\n\n/#setvar key=instructionClause \"\" |\n/#setvar key=personalityClause \"### {{char}}'s Persona\\n{{personality}}\\n\" |\n/#setvar key=personaClause \"### {{user}}'s Persona\\n{{persona}}\\n\\n\" |\n/#setvar key=historyClause \"\" |\n\n/# TODO: make this less gross, more tenable to different prompt formats. the start of that is above me head here ^|\n/setvar key=prompt #{{getvar::instruction}}\\n\\n##--Start of Roleplay Context--\\n\\n##Roleplay Participants:\\n### {{char}}'s Persona\\n{{personality}}\\n### {{user}}'s Persona\\n{{persona}}\\n\\n--End of Roleplay Context\\n\\n--Start of Chat History--\\n\\n\\n {{getvar::history}}\\n\\n\\n--End of Chat History--{{getvar::reminder}}|\n/#echo {{getvar::prompt}} |\n\n/# Check for ST-GetContext, disable auto-execute if not present |\n\n/setvar key=qrsettings {:/qr-get set=Grounded-Image-Captioning label=GroundedCaption:}() |\n\n/getvar key=qrsettings index=executeOnUser | /if left={{pipe}} rule=eq right=1 \"/setvar key=autoexec true\" |\n/getvar key=qrsettings index=executeOnAi | /if left={{pipe}} rule=eq right=1 \"/setvar key=autoexec true\" |\n/if left={{getvar::autoexec}} rule=neq right=true \"/setvar key=autoexec false\" |\n/#echo autoexec {{getvar::autoexec}} |\n\n/if left={:/extension-exists SillyTavern-GetContext:}() else={:\n\t/if left={{getvar::autoexec}} else=\"/break\" |\n\t/echo \"Auto-caption has been disabled. To enable, install SillyTavern-GetContext: https://github.com/LenAnderson/SillyTavern-GetContext\" ||\n\t/qr-update set=Grounded-Image-Captioning label=GroundedCaption user=false bot=false \n:} |\n/if left={: /ctx chat::{{lastMessageId}}::extra::image :}() {:\n\t/echo Generating caption... |\n\t/caption mesId={{lastMessageId}} quiet=true {{getvar::prompt}} | /setvar key=caption |\n\t/prompt default={{getvar::caption}} large=on wide=on Verify the caption, it will be inserted as a system message at depth 0. |\n\t/sys *{{getvar::caption}}* :} |\n/# this cleanup ideally isn't necessary but you never know\n/flushvar prompt | /flushvar caption | /flushvar qrsettings | /flushvar autoexec | /flushvar history | /flushvar reminder | /flushvar instruction\n","contextList":[{"set":"Grounded-Image-Captioning","isChained":false}],"preventAutoExecute":true,"isHidden":false,"executeOnStartup":false,"executeOnUser":true,"executeOnAi":true,"executeOnChatChange":false,"executeOnGroupMemberDraft":false,"executeOnNewChat":false,"automationId":""}],"idIndex":4}